//HUD.h

template <typename T>
T* CreateWidgetController(UObject* Outer, TSubclassOf<T> ControllerClass, FWidgetControllerData& WC_Data)
{
	T* ControllerRef = nullptr;
	if (!ControllerClass)
	{
		UE_LOG(LogTemp, Warning, TEXT("%s: ControllerClass is NULL"), *Outer->GetName());
		return nullptr;
	}

	ControllerRef = NewObject<T>(Outer, ControllerClass);
	ControllerRef->Set_WidgetController_Data(WC_Data);
	ControllerRef->Values_BindCallbacks();

	return ControllerRef;
}

//HUD.cpp

UWidgetController_AttributesMenu* AHUD::Get_WidgetController_AttributesMenu(FWidgetControllerData& WC_Data)
{
	return CreateWidgetController<UKoM_WidgetController_AttributesMenu>(this,  WidgetController_AttributeMenu_Class, WC_Data);
}




//BlueprintFunctionLibrary.cpp

UWidgetController_Overlay* UBlueprintFunctionLibrary::Get_WidgetController_Overlay(const UObject* WorldContextObject)
{
	return GetWidgetController( WorldContextObject, &AKoM_HUD::Get_WidgetController_Overlay);
}



//BlueprintFunctionLibrary.h

template <typename T>
T* GetWidgetController(const UObject* WorldContextObject, T*(AKoM_HUD::*GetterFunc)(FWidgetControllerData& ))
{
	if (WorldContextObject == nullptr) return nullptr;

	FWidgetControllerData WC_Data;
	AKoM_HUD* HUD;
	UKoM_BlueprintFunctionLibrary::Get_WidgetControllerParameters(WorldContextObject, WC_Data, HUD);
	if (HUD && GetterFunc)
	{
		return (HUD->*GetterFunc)(WC_Data);
	}
	return nullptr;
}

